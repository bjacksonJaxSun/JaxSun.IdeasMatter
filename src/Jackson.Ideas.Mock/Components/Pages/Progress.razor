@page "/progress"
@using Microsoft.AspNetCore.Components
@inject NavigationManager Navigation
@inject IJSRuntime JSRuntime

<PageTitle>Analyzing Your Idea - Ideas Matter</PageTitle>

<div class="progress-container">
    <!-- Progress Header -->
    <div class="progress-header">
        <div class="header-content">
            <div class="team-animation">
                <div class="team-member active">🤖<span class="member-label">AI Analyst</span></div>
                <div class="team-member active">📊<span class="member-label">Market Expert</span></div>
                <div class="team-member active">💡<span class="member-label">Strategy Coach</span></div>
                <div class="team-member active">🔍<span class="member-label">Research Pro</span></div>
            </div>
            <h1 class="header-title">Your AI Business Team is Hard at Work!</h1>
            <p class="header-subtitle">
                Meet your personal business team! These AI experts have helped thousands of people like you turn great ideas into successful businesses. They're genuinely excited to work on your project!
            </p>
            <div class="team-status">
                <div class="status-card">
                    <span class="status-icon">⚡</span>
                    <div class="status-content">
                        <div class="status-title">Real-time Analysis</div>
                        <div class="status-desc">Your team is analyzing data as we speak</div>
                    </div>
                </div>
                <div class="status-card">
                    <span class="status-icon">🎯</span>
                    <div class="status-content">
                        <div class="status-title">Personalized Insights</div>
                        <div class="status-desc">Every finding is customized for your idea</div>
                    </div>
                </div>
                <div class="status-card">
                    <span class="status-icon">🚀</span>
                    <div class="status-content">
                        <div class="status-title">Success Roadmap</div>
                        <div class="status-desc">Building your step-by-step action plan</div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Progress Steps -->
    <div class="progress-content">
        <div class="progress-wrapper">
            <!-- Current Progress -->
            <div class="current-step">
                <div class="step-icon">@GetCurrentStepIcon()</div>
                <div class="step-content">
                    <h2 class="step-title">@GetCurrentStepTitle()</h2>
                    <p class="step-description">@GetCurrentStepDescription()</p>
                    <div class="step-time">@GetCurrentStepTime()</div>
                </div>
            </div>

            <!-- Progress Bar -->
            <div class="progress-bar-container">
                <div class="progress-bar">
                    <div class="progress-fill" style="width: @(progressPercentage)%"></div>
                </div>
                <div class="progress-text">
                    <div class="progress-percentage">@progressPercentage% Complete</div>
                    <div class="progress-milestone">@GetProgressMilestone()</div>
                </div>
            </div>

            <!-- Steps List -->
            <div class="steps-list">
                @for (int i = 0; i < analysisSteps.Count; i++)
                {
                    var step = analysisSteps[i];
                    var isCompleted = i < currentStepIndex;
                    var isCurrent = i == currentStepIndex;
                    
                    <div class="step-item @(isCompleted ? "completed" : "") @(isCurrent ? "current" : "")">
                        <div class="step-indicator">
                            @if (isCompleted)
                            {
                                <span class="check-icon">✅</span>
                            }
                            else if (isCurrent)
                            {
                                <div class="loading-spinner"></div>
                            }
                            else
                            {
                                <span class="pending-icon">⏳</span>
                            }
                        </div>
                        <div class="step-details">
                            <h3 class="step-name">@step.Title</h3>
                            <p class="step-desc">@step.Description</p>
                        </div>
                    </div>
                }
            </div>

            <!-- Encouragement Messages -->
            <div class="encouragement-section">
                <div class="encouragement-card">
                    <div class="encouragement-icon">@GetEncouragementIcon()</div>
                    <div class="encouragement-content">
                        <h3 class="encouragement-title">@GetEncouragementTitle()</h3>
                        <p class="encouragement-message">@GetEncouragementMessage()</p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private int currentStepIndex = 0;
    private int progressPercentage = 0;
    private Timer? progressTimer;
    private string strategy = "quick";

    private List<AnalysisStep> analysisSteps = new();

    protected override void OnInitialized()
    {
        // Get strategy from query parameters
        var uri = new Uri(Navigation.Uri);
        var queryParams = System.Web.HttpUtility.ParseQueryString(uri.Query);
        strategy = queryParams["strategy"] ?? "quick";

        // Initialize steps based on strategy
        InitializeSteps();
        
        // Start progress simulation
        StartProgressSimulation();
    }

    private void InitializeSteps()
    {
        analysisSteps = strategy switch
        {
            "quick" => new List<AnalysisStep>
            {
                new("🔍", "Understanding Your Amazing Idea", "Your AI analyst is reading through every detail of your idea, getting genuinely excited about what you're building! They're noting all the clever aspects that make it special."),
                new("👥", "Finding People Who Will Love This", "Your market expert is out there right now, discovering all the people who have been waiting for exactly what you're creating. This is the most exciting part!"),
                new("💰", "Calculating Your Money Potential", "Your strategy coach is looking at similar success stories and crunching numbers to see how much you could earn. The early signs look really promising!"),
                new("⚡", "Creating Your Personal Report", "Your research pro is putting together everything we discovered into a report that's just for you. You're going to love what we found - this is going to be good!")
            },
            "deep" => new List<AnalysisStep>
            {
                new("🔍", "Deep-Diving Into Your Vision", "Your AI analyst is exploring every angle of your brilliant concept, uncovering potential you might not even know existed. They're finding some really interesting insights!"),
                new("🏪", "Checking Out the Competition", "Your market expert is researching similar businesses to find exactly what makes you different and better. You have more unique advantages than you realize!"),
                new("📊", "Crunching All the Exciting Numbers", "Your strategy coach is analyzing market data and financial possibilities. The numbers are looking really encouraging - you're going to be excited about this!"),
                new("🎯", "Finding Your Dream Customers", "Your research pro is identifying exactly who will become your biggest fans. These people are going to absolutely love what you're building!"),
                new("⚖️", "Mapping Your Opportunities", "Your team is discovering all the chances for your business to grow and thrive. There are more opportunities here than we first thought!"),
                new("💡", "Crafting Your Success Roadmap", "Your entire AI team is working together to create your personalized action plan. This roadmap is going to make everything feel possible!")
            },
            "launch" => new List<AnalysisStep>
            {
                new("📋", "Building Your Business Foundation", "Your AI analyst is creating the complete structure for your business, making sure every important piece is in place for your success."),
                new("🏢", "Deep Market & Competition Analysis", "Your market expert is conducting a comprehensive study of your industry, finding every opportunity and advantage you can use."),
                new("💰", "Creating Your Money Roadmap", "Your strategy coach is building detailed financial projections, startup cost estimates, and revenue forecasts that show exactly how profitable this can be."),
                new("🎯", "Researching Your Ideal Customers", "Your research pro is finding and profiling your perfect customers - the people who will become your biggest supporters and best clients."),
                new("🛠️", "Planning Your Product Strategy", "Your team is mapping out exactly how to build, improve, and perfect your product or service to delight customers."),
                new("📈", "Designing Your Marketing Plan", "Your experts are creating a complete strategy for reaching customers, making sales, and growing your business steadily."),
                new("🚀", "Building Your Launch Checklist", "Your AI team is putting together your complete step-by-step roadmap from where you are now to having a thriving business."),
                new("📊", "Setting Up Success Tracking", "Your team is creating systems to measure your progress and help you continuously improve and grow your business.")
            },
            _ => new List<AnalysisStep>()
        };
    }

    private void StartProgressSimulation()
    {
        var totalSteps = analysisSteps.Count;
        var stepDuration = strategy switch
        {
            "quick" => 3000, // 15 minutes / 4 steps ≈ 3.75 minutes per step
            "deep" => 7000,  // 45 minutes / 6 steps ≈ 7.5 minutes per step  
            "launch" => 11000, // 90 minutes / 8 steps ≈ 11.25 minutes per step
            _ => 3000 // Default to quick analysis
        };

        progressTimer = new Timer(async (_) =>
        {
            await InvokeAsync(() =>
            {
                if (currentStepIndex < totalSteps)
                {
                    progressPercentage = (int)((double)(currentStepIndex + 1) / totalSteps * 100);
                    StateHasChanged();
                    
                    if (progressPercentage >= 100)
                    {
                        progressTimer?.Dispose();
                        NavigateToResults();
                    }
                }
            });
        }, null, TimeSpan.FromMilliseconds(500), TimeSpan.FromMilliseconds(stepDuration / 10));

        // Advance steps
        var stepTimer = new Timer((_) =>
        {
            InvokeAsync(() =>
            {
                if (currentStepIndex < totalSteps - 1)
                {
                    currentStepIndex++;
                    StateHasChanged();
                }
            });
        }, null, TimeSpan.FromMilliseconds(stepDuration), TimeSpan.FromMilliseconds(stepDuration));
    }

    private void NavigateToResults()
    {
        Task.Delay(2000).ContinueWith(_ =>
        {
            InvokeAsync(() => Navigation.NavigateTo("/dashboard"));
        });
    }

    private string GetCurrentStepIcon() => currentStepIndex < analysisSteps.Count ? analysisSteps[currentStepIndex].Icon : "✨";
    private string GetCurrentStepTitle() => currentStepIndex < analysisSteps.Count ? analysisSteps[currentStepIndex].Title : "Almost Done!";
    private string GetCurrentStepDescription() => currentStepIndex < analysisSteps.Count ? analysisSteps[currentStepIndex].Description : "Putting the finishing touches on your analysis...";
    
    private string GetCurrentStepTime()
    {
        var totalSteps = analysisSteps.Count;
        var remainingSteps = totalSteps - currentStepIndex - 1;
        
        return strategy switch
        {
            "quick" => remainingSteps switch
            {
                0 => "✨ Final touches - 30 seconds left!",
                1 => "🎯 Almost there - just 2 minutes left!",
                2 => "⚡ Getting exciting - about 4 minutes left!",
                3 => "🚀 Just getting started - about 7 minutes left!",
                _ => "🔥 Your results are almost ready!"
            },
            "deep" => remainingSteps switch
            {
                0 => "✨ Polishing your insights - 1 minute left!",
                1 => "🎯 Almost finished - about 5 minutes left!",
                2 => "⚡ Great progress - about 12 minutes left!",
                3 => "🚀 Halfway there - about 20 minutes left!",
                4 => "💪 Building momentum - about 28 minutes left!",
                5 => "🔥 Just warming up - about 35 minutes left!",
                _ => "✨ Your comprehensive analysis is almost ready!"
            },
            "launch" => remainingSteps switch
            {
                0 => "✨ Adding final details - 2 minutes left!",
                1 => "🎯 Almost complete - about 8 minutes left!",
                2 => "⚡ Excellent progress - about 18 minutes left!",
                3 => "🚀 Over halfway - about 30 minutes left!",
                4 => "💪 Strong progress - about 42 minutes left!",
                5 => "🔥 Building your plan - about 55 minutes left!",
                6 => "⭐ Great start - about 68 minutes left!",
                7 => "🌟 Getting started - about 80 minutes left!",
                _ => "✨ Your complete business blueprint is almost ready!"
            },
            _ => "🎉 Your personalized analysis is almost complete!"
        };
    }

    private string GetProgressMilestone() => progressPercentage switch
    {
        >= 90 => "🏁 Almost done! Your results are being finalized...",
        >= 75 => "🎯 Three-quarters complete! The finish line is in sight!",
        >= 50 => "⭐ Halfway there! You're making excellent progress!",
        >= 25 => "🚀 Great start! Your AI team is hitting their stride!",
        _ => "💪 Just getting started! Your team is excited to work on this!"
    };

    private string GetEncouragementIcon() => currentStepIndex switch
    {
        0 => "🌟",
        1 => "🎉", 
        2 => "💪",
        3 => "🔥",
        4 => "⭐",
        5 => "🎯",
        _ => "✨"
    };

    private string GetEncouragementTitle() => currentStepIndex switch
    {
        0 => "Great start!",
        1 => "You're doing amazing!",
        2 => "Halfway there!",
        3 => "Almost finished!",
        4 => "Excellent progress!",
        5 => "Final stretch!",
        _ => "You did it!"
    };

    private string GetEncouragementMessage() => currentStepIndex switch
    {
        0 => "We're just getting started with your idea. Every great business began exactly like this!",
        1 => "Your idea is looking more promising as we dig deeper. Keep going!",
        2 => "We're finding some really interesting insights about your market. This is exciting!",
        3 => "The pieces are coming together beautifully. Your analysis is almost ready!",
        4 => "We're putting together all the insights we've discovered about your idea.",
        5 => "Just adding the final details to make sure everything is perfect for you.",
        _ => "Your complete analysis is ready! We can't wait to share what we found."
    };

    public void Dispose()
    {
        progressTimer?.Dispose();
    }

    private record AnalysisStep(string Icon, string Title, string Description);
}

<style>
/* Progress Page Styling */
.progress-container {
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', sans-serif;
    background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);
    min-height: 100vh;
    padding: 0;
}

/* Header Section */
.progress-header {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
    padding: 60px 32px 40px 32px;
    text-align: center;
}

.header-content {
    max-width: 900px;
    margin: 0 auto;
}

/* Team Animation */
.team-animation {
    display: flex;
    justify-content: center;
    gap: 20px;
    margin-bottom: 32px;
    flex-wrap: wrap;
}

.team-member {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 8px;
    padding: 16px;
    background: rgba(255, 255, 255, 0.1);
    border-radius: 16px;
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.2);
    min-width: 120px;
    font-size: 24px;
    animation: teamPulse 2s infinite;
}

.team-member.active {
    animation: teamWorking 1.5s infinite;
}

@@keyframes teamPulse {
    0%, 100% { transform: scale(1); opacity: 0.8; }
    50% { transform: scale(1.02); opacity: 1; }
}

@@keyframes teamWorking {
    0%, 100% { transform: translateY(0) scale(1); }
    25% { transform: translateY(-2px) scale(1.02); }
    75% { transform: translateY(1px) scale(0.98); }
}

.team-member .member-label {
    font-size: 12px;
    font-weight: 600;
    opacity: 0.9;
    text-align: center;
}

/* Team Status Cards */
.team-status {
    display: flex;
    justify-content: center;
    gap: 24px;
    margin-top: 32px;
    flex-wrap: wrap;
}

.status-card {
    display: flex;
    align-items: center;
    gap: 12px;
    background: rgba(255, 255, 255, 0.15);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.2);
    border-radius: 16px;
    padding: 16px 20px;
    min-width: 200px;
    animation: statusPulse 2s infinite;
}

.status-icon {
    font-size: 24px;
    animation: statusBounce 2s infinite;
}

.status-content {
    flex: 1;
}

.status-title {
    font-size: 14px;
    font-weight: 600;
    margin-bottom: 4px;
}

.status-desc {
    font-size: 12px;
    opacity: 0.9;
    line-height: 1.3;
}

@@keyframes statusPulse {
    0%, 100% { transform: scale(1); }
    50% { transform: scale(1.02); }
}

@@keyframes statusBounce {
    0%, 20%, 50%, 80%, 100% { transform: translateY(0); }
    40% { transform: translateY(-4px); }
    60% { transform: translateY(-2px); }
}

.header-icon {
    font-size: 64px;
    margin-bottom: 24px;
    animation: pulse 2s infinite;
}

@@keyframes pulse {
    0%, 100% { transform: scale(1); }
    50% { transform: scale(1.05); }
}

.header-title {
    font-size: 42px;
    font-weight: 700;
    margin: 0 0 16px 0;
    line-height: 1.2;
}

.header-subtitle {
    font-size: 20px;
    font-weight: 400;
    margin: 0;
    opacity: 0.95;
    line-height: 1.5;
}

/* Progress Content */
.progress-content {
    padding: 40px 32px;
}

.progress-wrapper {
    max-width: 800px;
    margin: 0 auto;
}

/* Current Step */
.current-step {
    background: white;
    border-radius: 20px;
    padding: 32px;
    margin-bottom: 32px;
    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
    border: 1px solid #e2e8f0;
    display: flex;
    align-items: center;
    gap: 24px;
}

.current-step .step-icon {
    font-size: 48px;
    flex-shrink: 0;
    animation: bounce 1s infinite;
}

@@keyframes bounce {
    0%, 20%, 50%, 80%, 100% { transform: translateY(0); }
    40% { transform: translateY(-10px); }
    60% { transform: translateY(-5px); }
}

.step-content {
    flex: 1;
}

.step-title {
    font-size: 28px;
    font-weight: 700;
    color: #2d3748;
    margin: 0 0 12px 0;
    line-height: 1.2;
}

.step-description {
    font-size: 18px;
    color: #4a5568;
    line-height: 1.5;
    margin: 0 0 16px 0;
}

.step-time {
    color: #667eea;
    font-size: 16px;
    font-weight: 600;
    margin: 0;
}

/* Progress Bar */
.progress-bar-container {
    background: white;
    border-radius: 16px;
    padding: 24px;
    margin-bottom: 32px;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
    border: 1px solid #e2e8f0;
}

.progress-bar {
    background: #e2e8f0;
    border-radius: 12px;
    height: 12px;
    overflow: hidden;
    margin-bottom: 12px;
}

.progress-fill {
    background: linear-gradient(90deg, #667eea, #764ba2);
    height: 100%;
    border-radius: 12px;
    transition: width 0.5s ease;
}

.progress-text {
    text-align: center;
    color: #4a5568;
}

.progress-percentage {
    font-size: 16px;
    font-weight: 600;
    margin-bottom: 4px;
}

.progress-milestone {
    font-size: 14px;
    color: #667eea;
    font-weight: 500;
    font-style: italic;
}

/* Steps List */
.steps-list {
    background: white;
    border-radius: 20px;
    padding: 32px;
    margin-bottom: 32px;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
    border: 1px solid #e2e8f0;
}

.step-item {
    display: flex;
    align-items: flex-start;
    gap: 16px;
    padding: 16px 0;
    border-bottom: 1px solid #f7fafc;
    opacity: 0.6;
}

.step-item:last-child {
    border-bottom: none;
}

.step-item.completed {
    opacity: 1;
}

.step-item.current {
    opacity: 1;
    background: linear-gradient(135deg, rgba(102, 126, 234, 0.1) 0%, rgba(118, 75, 162, 0.1) 100%);
    border-radius: 12px;
    margin: 0 -16px;
    padding: 16px;
}

.step-indicator {
    font-size: 24px;
    flex-shrink: 0;
    width: 32px;
    height: 32px;
    display: flex;
    align-items: center;
    justify-content: center;
}

.loading-spinner {
    width: 20px;
    height: 20px;
    border: 2px solid #e2e8f0;
    border-top: 2px solid #667eea;
    border-radius: 50%;
    animation: spin 1s linear infinite;
}

@@keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
}

.step-details {
    flex: 1;
}

.step-name {
    font-size: 18px;
    font-weight: 600;
    color: #2d3748;
    margin: 0 0 4px 0;
}

.step-desc {
    font-size: 14px;
    color: #718096;
    line-height: 1.5;
    margin: 0;
}

/* Encouragement Section */
.encouragement-section {
    margin-bottom: 32px;
}

.encouragement-card {
    background: linear-gradient(135deg, rgba(102, 126, 234, 0.1) 0%, rgba(118, 75, 162, 0.1) 100%);
    border-radius: 20px;
    padding: 32px;
    border: 2px solid rgba(102, 126, 234, 0.2);
    display: flex;
    align-items: center;
    gap: 20px;
}

.encouragement-icon {
    font-size: 48px;
    flex-shrink: 0;
    animation: pulse 2s infinite;
}

.encouragement-content {
    flex: 1;
}

.encouragement-title {
    font-size: 24px;
    font-weight: 700;
    color: #2d3748;
    margin: 0 0 8px 0;
}

.encouragement-message {
    font-size: 16px;
    color: #4a5568;
    line-height: 1.6;
    margin: 0;
}

/* Responsive Design */
@@media (max-width: 768px) {
    .progress-header {
        padding: 40px 20px 30px 20px;
    }
    
    .header-title {
        font-size: 32px;
    }
    
    .header-subtitle {
        font-size: 18px;
    }
    
    .progress-content {
        padding: 32px 20px;
    }
    
    .current-step {
        flex-direction: column;
        text-align: center;
        padding: 24px;
    }
    
    .step-title {
        font-size: 24px;
    }
    
    .encouragement-card {
        flex-direction: column;
        text-align: center;
        padding: 24px;
    }
}

@@media (max-width: 480px) {
    .header-icon {
        font-size: 48px;
    }
    
    .current-step .step-icon {
        font-size: 36px;
    }
    
    .encouragement-icon {
        font-size: 36px;
    }
    
    .step-title {
        font-size: 20px;
    }
    
    .encouragement-title {
        font-size: 20px;
    }
}
</style>