// <auto-generated />
using System;
using Jackson.Ideas.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Jackson.Ideas.Infrastructure.Migrations
{
    [DbContext(typeof(JacksonIdeasDbContext))]
    [Migration("20250701120759_AddResearchSessionEntities")]
    partial class AddResearchSessionEntities
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("Jackson.Ideas.Core.Entities.AIProviderConfig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConfigJson")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue("{}")
                        .HasColumnName("Config");

                    b.Property<decimal>("CostPerToken")
                        .HasPrecision(10, 8)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<int>("CurrentRpmUsage")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("EncryptedApiKey")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("LastUsedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("Priority")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RateLimitRpm")
                        .HasColumnType("INTEGER");

                    b.Property<long>("TotalTokens")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("UsageCount")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("IsActive");

                    b.HasIndex("Type");

                    b.HasIndex("UserId");

                    b.ToTable("AIProviderConfigs", (string)null);
                });

            modelBuilder.Entity("Jackson.Ideas.Core.Entities.MarketAnalysis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CompetitiveLandscapeJson")
                        .HasColumnType("TEXT")
                        .HasColumnName("CompetitiveLandscape");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("CustomerSegmentsJson")
                        .HasColumnType("TEXT")
                        .HasColumnName("CustomerSegments");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("EntryBarriersJson")
                        .HasColumnType("TEXT")
                        .HasColumnName("EntryBarriers");

                    b.Property<string>("GeographicScope")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("GrowthRate")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Industry")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("KeyTrendsJson")
                        .HasColumnType("TEXT")
                        .HasColumnName("KeyTrends");

                    b.Property<string>("MarketSize")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("RegulatoryEnvironmentJson")
                        .HasColumnType("TEXT")
                        .HasColumnName("RegulatoryEnvironment");

                    b.Property<int>("ResearchId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RevenueModelsJson")
                        .HasColumnType("TEXT")
                        .HasColumnName("RevenueModels");

                    b.Property<string>("TargetAudience")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ResearchId");

                    b.ToTable("MarketAnalyses", (string)null);
                });

            modelBuilder.Entity("Jackson.Ideas.Core.Entities.Research", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AIProvider")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("BusinessPlanJson")
                        .HasColumnType("TEXT")
                        .HasColumnName("BusinessPlan");

                    b.Property<string>("CompetitorsJson")
                        .HasColumnType("TEXT")
                        .HasColumnName("Competitors");

                    b.Property<DateTime?>("CompletedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("CurrentStep")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("EstimatedCost")
                        .HasPrecision(10, 4)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IncludeBusinessPlan")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IncludeMarketAnalysis")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IncludeSwot")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MarketAnalysisJson")
                        .HasColumnType("TEXT")
                        .HasColumnName("MarketAnalysis");

                    b.Property<int>("ProgressPercentage")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ProviderInsightsJson")
                        .HasColumnType("TEXT")
                        .HasColumnName("ProviderInsights");

                    b.Property<string>("ResearchType")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasDefaultValue("comprehensive");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SwotAnalysisJson")
                        .HasColumnType("TEXT")
                        .HasColumnName("SwotAnalysis");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int>("TokensUsed")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CreatedAt");

                    b.HasIndex("Status");

                    b.HasIndex("UserId");

                    b.ToTable("Researches", (string)null);
                });

            modelBuilder.Entity("Jackson.Ideas.Core.Entities.ResearchInsight", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("ConfidenceScore")
                        .HasPrecision(3, 2)
                        .HasColumnType("REAL");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("InsightType")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Metadata")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue("{}");

                    b.Property<string>("Phase")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("ResearchSessionId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SortOrder")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Phase");

                    b.HasIndex("ResearchSessionId");

                    b.ToTable("ResearchInsights", (string)null);
                });

            modelBuilder.Entity("Jackson.Ideas.Core.Entities.ResearchOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Approach")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("BusinessModel")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue("{}");

                    b.Property<string>("CompetitivePositioning")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("EstimatedInvestmentUsd")
                        .HasPrecision(15, 2)
                        .HasColumnType("TEXT");

                    b.Property<string>("GoToMarketStrategy")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsRecommended")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MitigationStrategies")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue("[]");

                    b.Property<double>("OverallScore")
                        .HasPrecision(3, 1)
                        .HasColumnType("REAL");

                    b.Property<int>("ResearchSessionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RiskFactors")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue("[]");

                    b.Property<int?>("SortOrder")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SuccessMetrics")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue("[]");

                    b.Property<int>("SuccessProbabilityPercent")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SwotAnalysis")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue("{}");

                    b.Property<string>("TargetCustomerSegment")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<int>("TimelineToMarketMonths")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TimelineToProfitabilityMonths")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("ValueProposition")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IsRecommended");

                    b.HasIndex("OverallScore");

                    b.HasIndex("ResearchSessionId");

                    b.ToTable("ResearchOptions", (string)null);
                });

            modelBuilder.Entity("Jackson.Ideas.Core.Entities.ResearchSession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double?>("AnalysisCompleteness")
                        .HasColumnType("REAL");

                    b.Property<double?>("AnalysisConfidence")
                        .HasColumnType("REAL");

                    b.Property<DateTime?>("CompletedAt")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<string>("CurrentPhase")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("TEXT");

                    b.Property<string>("ErrorMessage")
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<int>("EstimatedDurationMinutes")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NextSteps")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue("[]");

                    b.Property<double>("ProgressPercentage")
                        .HasColumnType("REAL");

                    b.Property<string>("ResearchApproach")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("StartedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CreatedAt");

                    b.HasIndex("Status");

                    b.HasIndex("UserId");

                    b.ToTable("ResearchSessions", (string)null);
                });

            modelBuilder.Entity("Jackson.Ideas.Core.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AuthProvider")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasDefaultValue("local");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("GETUTCDATE()");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("HashedPassword")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Permissions")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue("[]");

                    b.Property<string>("Picture")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TenantId")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("TenantId");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("Jackson.Ideas.Core.Entities.AIProviderConfig", b =>
                {
                    b.HasOne("Jackson.Ideas.Core.Entities.User", "User")
                        .WithMany("AIProviderConfigs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("User");
                });

            modelBuilder.Entity("Jackson.Ideas.Core.Entities.MarketAnalysis", b =>
                {
                    b.HasOne("Jackson.Ideas.Core.Entities.Research", "Research")
                        .WithMany("MarketAnalyses")
                        .HasForeignKey("ResearchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Research");
                });

            modelBuilder.Entity("Jackson.Ideas.Core.Entities.Research", b =>
                {
                    b.HasOne("Jackson.Ideas.Core.Entities.User", "User")
                        .WithMany("Researches")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Jackson.Ideas.Core.Entities.ResearchInsight", b =>
                {
                    b.HasOne("Jackson.Ideas.Core.Entities.ResearchSession", "ResearchSession")
                        .WithMany("ResearchInsights")
                        .HasForeignKey("ResearchSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ResearchSession");
                });

            modelBuilder.Entity("Jackson.Ideas.Core.Entities.ResearchOption", b =>
                {
                    b.HasOne("Jackson.Ideas.Core.Entities.ResearchSession", "ResearchSession")
                        .WithMany("ResearchOptions")
                        .HasForeignKey("ResearchSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ResearchSession");
                });

            modelBuilder.Entity("Jackson.Ideas.Core.Entities.ResearchSession", b =>
                {
                    b.HasOne("Jackson.Ideas.Core.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Jackson.Ideas.Core.Entities.Research", b =>
                {
                    b.Navigation("MarketAnalyses");
                });

            modelBuilder.Entity("Jackson.Ideas.Core.Entities.ResearchSession", b =>
                {
                    b.Navigation("ResearchInsights");

                    b.Navigation("ResearchOptions");
                });

            modelBuilder.Entity("Jackson.Ideas.Core.Entities.User", b =>
                {
                    b.Navigation("AIProviderConfigs");

                    b.Navigation("Researches");
                });
#pragma warning restore 612, 618
        }
    }
}
