@using Jackson.Ideas.Core.DTOs.Research
@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Components.Web

<div class="strategy-selector-container" role="main" aria-label="Research Strategy Selection">
    <div class="selector-header">
        <h2>Start Your Research Strategy</h2>
        <p class="selector-description">
            Choose from our industry-specific templates to get started faster with pre-configured research approaches.
        </p>
    </div>

    <!-- Industry Templates Section -->
    <div class="template-marketplace" role="region" aria-labelledby="templates-heading">
        <h3 id="templates-heading">Industry-Specific Templates</h3>
        <p class="templates-description">
            Get started faster with pre-configured research approaches for your industry.
        </p>
        
        <div class="template-categories">
            @foreach (var category in IndustryTemplates)
            {
                <div class="template-category">
                    <h4>@category.Name</h4>
                    <div class="template-items">
                        @foreach (var template in category.Templates)
                        {
                            <button type="button" 
                                    class="template-item"
                                    @onclick="() => ApplyTemplate(template)"
                                    aria-label="Apply @template.Name template">
                                <div class="template-icon" aria-hidden="true">
                                    <i class="@template.IconClass"></i>
                                </div>
                                <span class="template-name">@template.Name</span>
                                <span class="template-description">@template.Description</span>
                            </button>
                        }
                    </div>
                </div>
            }
        </div>
    </div>

</div>

@code {
    [Parameter] public IndustryTemplate? SelectedTemplate { get; set; }
    [Parameter] public EventCallback<IndustryTemplate> OnTemplateSelected { get; set; }

    private List<IndustryTemplateCategory> IndustryTemplates = new();

    protected override void OnInitialized()
    {
        InitializeIndustryTemplates();
    }

    private void InitializeIndustryTemplates()
    {
        IndustryTemplates = new List<IndustryTemplateCategory>
        {
            new()
            {
                Name = "Technology",
                Templates = new List<IndustryTemplate>
                {
                    new() { Name = "SaaS Platform", Description = "Software as a Service", IconClass = "fas fa-cloud" },
                    new() { Name = "Mobile App", Description = "Consumer mobile application", IconClass = "fas fa-mobile-alt" },
                    new() { Name = "AI/ML Solution", Description = "Artificial intelligence product", IconClass = "fas fa-robot" }
                }
            },
            new()
            {
                Name = "E-commerce",
                Templates = new List<IndustryTemplate>
                {
                    new() { Name = "Online Marketplace", Description = "Multi-vendor platform", IconClass = "fas fa-store" },
                    new() { Name = "Direct-to-Consumer", Description = "DTC brand", IconClass = "fas fa-shopping-cart" },
                    new() { Name = "Subscription Box", Description = "Recurring delivery service", IconClass = "fas fa-box" }
                }
            },
            new()
            {
                Name = "Services",
                Templates = new List<IndustryTemplate>
                {
                    new() { Name = "Professional Services", Description = "B2B service offering", IconClass = "fas fa-briefcase" },
                    new() { Name = "Healthcare", Description = "Medical/health service", IconClass = "fas fa-heartbeat" },
                    new() { Name = "Education", Description = "Learning platform", IconClass = "fas fa-graduation-cap" }
                }
            }
        };
    }

    private async Task ApplyTemplate(IndustryTemplate template)
    {
        SelectedTemplate = template;
        await OnTemplateSelected.InvokeAsync(template);
        StateHasChanged();
    }

    public class IndustryTemplateCategory
    {
        public string Name { get; set; } = string.Empty;
        public List<IndustryTemplate> Templates { get; set; } = new();
    }

    public class IndustryTemplate
    {
        public string Name { get; set; } = string.Empty;
        public string Description { get; set; } = string.Empty;
        public string IconClass { get; set; } = string.Empty;
    }
}

<style>
    .strategy-selector-container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 2rem;
    }

    .selector-header {
        text-align: center;
        margin-bottom: 3rem;
    }

    .selector-header h2 {
        color: #333;
        margin-bottom: 1rem;
        font-size: 2rem;
    }

    .selector-description {
        color: #666;
        font-size: 1.1rem;
        max-width: 600px;
        margin: 0 auto;
    }


    /* Template Marketplace */
    .template-marketplace {
        background: white;
        border-radius: 8px;
        padding: 2rem;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
        margin-bottom: 3rem;
    }

    .template-marketplace h3 {
        color: #333;
        margin-bottom: 0.5rem;
    }

    .templates-description {
        color: #666;
        margin-bottom: 2rem;
    }

    .template-categories {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 2rem;
    }

    .template-category h4 {
        color: #333;
        margin-bottom: 1rem;
        font-size: 1.1rem;
    }

    .template-items {
        display: flex;
        flex-direction: column;
        gap: 0.75rem;
    }

    .template-item {
        display: flex;
        align-items: center;
        gap: 1rem;
        padding: 1rem;
        background: #f8f9fa;
        border: 1px solid #e9ecef;
        border-radius: 6px;
        cursor: pointer;
        transition: all 0.2s ease;
        text-align: left;
    }

    .template-item:hover {
        border-color: #007bff;
        background: #f0f8ff;
    }

    .template-icon {
        width: 32px;
        height: 32px;
        background: #007bff;
        border-radius: 4px;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
    }

    .template-name {
        font-weight: 500;
        color: #333;
        margin-bottom: 0.25rem;
    }

    .template-description {
        font-size: 0.875rem;
        color: #666;
    }


    /* Accessibility Helpers */
    .sr-only {
        position: absolute !important;
        width: 1px !important;
        height: 1px !important;
        padding: 0 !important;
        margin: -1px !important;
        overflow: hidden !important;
        clip: rect(0, 0, 0, 0) !important;
        white-space: nowrap !important;
        border: 0 !important;
    }

    .text-success {
        color: #28a745 !important;
    }

    .text-muted {
        color: #6c757d !important;
    }

    /* Mobile Responsiveness */
    @@media (max-width: 768px) {
        .strategy-selector-container {
            padding: 1rem;
        }

        .template-categories {
            grid-template-columns: 1fr;
        }
    }

    /* Reduced Motion */
    @@media (prefers-reduced-motion: reduce) {
        .template-item {
            transition: none;
        }
    }
</style>